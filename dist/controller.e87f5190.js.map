{"version":3,"sources":["src/js/model.js","src/js/Views/AddTransactionView.js","src/js/config.js","src/js/Views/ShowBalanceView.js","src/js/Views/ListView.js","src/js/Views/ExpenseTrackerView.js","src/js/Views/IncomeTrackerView.js","src/js/Views/index.js","src/js/controller.js"],"names":["transactionType","INCOME","EXPENSE","Transaction","type","value","Math","random","isNaN","TypeError","Error","_type","_value","id","timestamp","Date","now","AddTransactionView","document","querySelector","_form","handler","self","addEventListener","e","clearForm","_amount","parseFloat","CURRENCY_UNIT","ShowBalanceView","data","balance","getTotalBalance","console","log","_container","innerHTML","totalIncome","income","forEach","inc","totalExpense","expense","exp","Number","toFixed","toLocaleString","minimumFractionDigits","getFormatedBalance","ListView","html","generateHTMLString","_filterSelect","transaction","insertAdjacentHTML","getCardHTMLString","el","Array","isArray","date","toDateString","ExpenseTrackerView","IncomeTrackerView","getTransactionsFromLS","JSON","parse","localStorage","getItem","saveTransactionInLS","list","push","stringify","setItem","controlAddTransaction","event","preventDefault","amount","pushTransactionCard","controlShowBalance","render","compareAmountFn","a","b","flag","controlSortByAmount","view","shouldReverse","sort","reverse","controlFilterChange","ev","target","init","addSubmitHandler","addFilterEventHandler"],"mappings":";;AQCA;;AACA;;ANFO,AMAP,INAa4B,aAAa,GAAG,IAAtB;AGAP,ACAA,AFAA,ADAA,AKIA;AACA,IAAMmC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAC3D,IAAD,EAAU;AHJxC,AGKI,SAAO4D,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB/D,IAArB,KAA8B,IAAzC,CAAP;AACH,CAFD,EAGA;;;AACA,IAAMgE,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAChE,IAAD,EAAOiD,WAAP,EAAuB;AAC/C,MAAIgB,IAAI,GAAGN,qBAAqB,CAAC3D,IAAD,CAAhC;AACAiE,EAAAA,EPVEpD,EOUE,CAACqD,IAAL,CAAUjB,WAAV;AACAgB,EAAAA,IAAI,GAAGL,IAAI,CAACO,SAAL,CAAeF,IAAf,CAAP;AACAH,EAAAA,YAAY,CAACM,OAAb,CAAqBpE,IAArB,EAA2BiE,IAA3B;AACH,CALD;mCPPYnD,QAAQ,CAACC,aAAT,CAAuB,uBAAvB;AOcZ,IAAMsD,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,KAAD,EAAW;AACrCA,EAAAA,KAAK,CAACC,cAAN,ePdU,KAAKvD,KAAL,CAAWD,aAAX,CAAyB,SAAzB;AOeV,MAAMyD,MAAN,GAAuB3D,yBAAvB,CAAM2D,MAAN;AAAA,ARlBJ,IIGa3B,EIeK7C,IAAd,GAAuBa,sBPdf,GOcR,CAAcb,CPdDgB,GOcb,EPdQ,CAAWD,aAAX,CAAyB,mBAAzB;AOeRc,ARlBG,EQkBHA,ERlBSjC,KQkBF,CAACkC,GAAR,CAAY0C,KRlBY,CQkBxB,EAAoBxE,ARlBO,IQkB3B;AACA,ARlBAH,EAAAA,EGAE4B,EKkBIwB,ERlBA,EAAE,OQkBS,CRnBU,EQmBP,IAAIlD,kBAAJ,CAAgBC,IAAhB,EAAsBwE,MAAtB,CAApB;AACAR,ARlBAlE,EQkBAkE,ARlBAlE,OAAO,EAAE,UQkBU,CAACE,IAAD,EAAOiD,WAAP,CAAnB;ARpB2B,CAAxB,EAKP;AQgBIpC,WPjBA,iBOiBmBQ,SPjBFJ,AOiBjB,OPjBA,EAA0B;AACtB,UAAMC,IAAI,GAAG,IAAb;AMNR,ACuBI,MAAIlB,IAAI,KAAKJ,uBAAgBE,OAA7B,EAAsC;APhBlC,AOiBA2D,WPjBKzC,KAAL,CAAWG,aOiBQsD,GPjBnB,CAA4B,MEJnB3D,EFIT,EAAsC,IEJrB,CAACC,AKqBlB,CAAuCkC,IPjBA7B,CAAD,EAAO,IOiB7C,CLrBS,CAAuB,oBAAvB;AFKLH,AMPZ,ACwBK,GAFD,KPfQA,COkBH,EJtBL,IHIe,CAACG,CAAD,CAAP,SGJDM,IAAP,EAAa;AHKLR,AGJJ,AIsBAwC,IFzBFA,ANKO3D,ICEDmB,GGJCQ,CHIG,CAACL,EGJT,GAAYK,IHIR,AGJJ,OIsBkB+C,eRjBtB,IQiBI,CAAsCxB,WAAtC,KRjBQjD,IAAZ,EAAkBC,KAAlB,EAAyB;ACApB,AGJD,AGJR,AC0BK,ARlBwB,OCHrB,GGDM6C,IAAI,GAAG,KAAKC,kBAAL,EAAb;AHKH,AGJG,ICJFU,ODIO1B,UAAL,CAAgBC,SAAhB,GAA4Bc,IAA5B;AACH,AGLL,AC0BI4B,ARnByB,EQmBzBA,SLxBA,SKwBkB,OLxBXhD,IAAP,EAAa;AACT,AKwBP,ARpB4B,CQM7B,EAgBA,QL1BaA,IAAL,GAAYA,IAAZ;AACA,AHGqB,UGHfC,CFMV,MENiB,GAAG,KAAKC,CHCP1B,IAAI,CAACC,CCKX,KDLM,GGDE,EAAhB,AHC8B,GAET;ACIrB,AENA0B,AHEqB,MGFrBA,KFMKP,AGLT,EDDW,CAACQ,GAAR,CFMA,AENY,CFMC7B,KAAb,GAAqB,EAArB,EENA,EAA2B,KAAK0B,ICCdV,GDDlB,ICCJ,EAA+B;AHM9B,AGLG,ADDA,AKwBR,IAAMyD,OJvBO1B,ADDAjB,UAAL,CAAgBC,AKwBA,EJvBhB,CAAmBb,AIuBA,MLxBnB,GKwBFuD,OJvBE,CAAoC,QAApC,EAA8C,AIuB3B,GAAM,ELxBG,IAA5B,CCC+CtD,CAAD,EAAO,8CDDzB,IAA5B;ACEIH,ADDP,AKwBDY,ARvBI,EQuBJA,IRvBQ,EIAAZ,CIuBD,CAACa,GAAR,ARvBe7B,CQuBH,CJvBG,CAACmB,CAAD,CAAP,AJAA,KAAiB,QAAjB,IAA6BhB,KAAK,CAACH,KAAD,CQuB1C,ARvBI,EACI,MAAM,IAAII,SAAJ,CAAc,sBAAd,CAAN;AIAH,AIuBL,ARtBI,MQsBE6B,ARtBE,CIHJ,CJGMlC,IQsBE,ARtBE,GQsBC2D,CRtBG/D,eAAV,CAAJ,EACI,EQqB4B,CAACA,GRrBvB,IAAIU,KAAJ,CAAU,UQqB6BT,MAAjB,CAApC,oBRrBc,CAAN;AIDP,AIuBD,ARrBI,MQqBEyC,CRrBG/B,ECET,GDFI,CQqBS,ERrBIP,CQqBD2D,GRrBZ,KCES,aOmBwB,CAAC/D,uBAAgBE,OAAjB,CAArC;APlBI,ADFA,OAAKU,IGQT,EFNWe,ADFP,GAActB,KAAd,CANqB,CCQJ,ADDjB,CCCkB,KAAKqB,OAAL,CAAarB,CEMjB,IFNG,CAAjB;AACH,AEMG,AKYJwB,ULZQQ,WAAW,GAAG,CAAlB,AKYY0C,MAAhB,CAAuB;ALXnB,AKYAzC,ARpBA,IQoBAA,GRpBKzB,EAAL,CQoBM,CJvBV,ADWSiB,CKYLQ,GLZA,CAAUA,EKWS,ILXnB,AHRalC,CGQImC,GHRjB,IGQA,CAAyB,SCXTc,AJGKhD,CGQImC,GAAG,CHR5B,CGQgC,KCXpC,EAAiC,4BJGC,IAA9B;AIFA,ADWIH,AKYJK,ARpBA,IQoBAA,GRpBK5B,CGQDuB,GCXCF,AIuBE,EAAPO,GRpBA,GGQe,AHRE3B,EIHjB,CAAgBuC,CDWGd,AHRE,CAACxB,EGQA,CAACJ,AHRN,EAAjB,IGQI,OCXJ,CAAmC,YAAnC,EAAiD,KAAK2C,iBAAL,CAAuBF,WAAvB,CAAjD;AACH,ADWI,AKSkB,ARjBtB,GQiBD,ILXI,EFLJ,eAAW;AACP,AEOA,AKYP,CARD,SLJYZ,GFPG,KAAK9B,IEOI,CFPT,CAAWN,CEOC,CAAnB,GFPA,oCKnBSa,QAAQ,CAACC,aAAT,CAAuB,mBAAvB;ALoBZ,AEOG,WAAKW,IAAL,CAAUY,OAAV,CAAkBH,OAAlB,CAA0B,UAAAI,GAAG,EAAI;AAC7BF,AKYZ,ARtBC,EACD,EQqBMuC,ILZMvC,GCZR,QIwBiB,CLZG,EKYA,ELZIE,GAAG,CAAC/B,GKY1BoE,GLZM,ICZUxB,EAAlB,EAAsB,IIwBF,CAACyB,CAAD,EAAIC,CAAJ,EAAOC,IAAP,EAAgB,MHvCvBjE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","file":"controller.e87f5190.js","sourceRoot":"..","sourcesContent":["// exporting to controller view.\nexport const transactionType = {\n    INCOME: \"INCOME\",\n    EXPENSE: \"EXPENSE\"\n};\n\n// transaction class 1.\nexport class Transaction {\n    #secret = `adsad${Math.random() * 100}`;\n\n    constructor(type, value) {\n        if (typeof value !== \"number\" || isNaN(value))\n            throw new TypeError(\"value must be number\")\n        if (!(type in transactionType))\n            throw new Error(\"type must be INCOME or EXPENSE only\");\n        this._type = type;\n        this._value = value;\n        // creating an unique id for each transation 2.\n        this.id = `${type}-${value}-${this.#secret}`;\n        this.timestamp = Date.now();\n    }\n};\n// console.log(this.id);\n\n","\nclass AddTransactionView {\n    _form = document.querySelector(\".add_transaction_form\");\n    _amount = this._form.querySelector(\".amount\")\n    _type = this._form.querySelector(\".transaction_type\")\n    addSubmitHandler(handler) {\n        const self = this;\n        this._form.addEventListener(\"submit\", (e) => {\n            handler(e);\n            self.clearForm();\n        });\n    }\n\n    clearForm() {\n        this._amount.value = \"\";\n    }\n\n    get amount() {\n        return parseFloat(this._amount.value);\n    }\n\n    get type() {\n        return this._type.value;\n    }\n}\n\nexport default new AddTransactionView();","export const CURRENCY_UNIT = \"Rs\"","import { CURRENCY_UNIT } from \"../config\";\n\nclass ShowBalanceView {\n    _container = document.querySelector(\".balance_container\");\n\n    render(data) {\n        this.data = data;\n        const balance = this.getTotalBalance();\n        console.log(\"balance is \", this.balance)\n        this._container.innerHTML = this.#generateHTMLString();\n    };\n\n\n    #generateHTMLString() {\n        return `\n        <div style=\"display:flex;flex-direction:column;align-items:center;\"> \n            <h5>Your Balance</h5>\n           <div class=\"balance bold ${this.balance > 0 ? \"green\" : \"red\"}\">\n             ${CURRENCY_UNIT} ${this.getFormatedBalance()}\n           </div>\n        </div>\n        `\n    };\n\n    getTotalBalance() {\n        let totalIncome = 0;\n        this.data.income.forEach(inc => {\n            totalIncome += inc._value;\n        });\n        let totalExpense = 0;\n        this.data.expense.forEach(exp => {\n            totalExpense += exp._value\n        });\n        this.balance = totalIncome - totalExpense;\n    };\n\n    getFormatedBalance() {\n        return Number(parseFloat(this.balance).toFixed(2)).toLocaleString('en', {\n            minimumFractionDigits: 2\n        })\n    }\n};\n\nexport default new ShowBalanceView();","import { CURRENCY_UNIT } from \"../config\";\n\n\nexport class ListView {\n    render(data) {\n        this.data = data;\n        const html = this.generateHTMLString();\n        this._container.innerHTML = html;\n    }\n    addFilterEventHandler(handler) {\n        this._filterSelect.addEventListener(\"change\", (e) => {\n            handler(e)\n        })\n    }\n\n    pushTransactionCard(transaction) {\n        this._container.insertAdjacentHTML(\"afterbegin\", this.getCardHTMLString(transaction))\n    }\n\n    getCardHTMLString(el) {\n        return ` <div class=\"card transaction_card\" style=\"display:flex; justify-content:space-between\">\n        <div class=${el._type === \"EXPENSE\" ? \"red\" : \"green\"}\n         style=\"font-weight:bolder;\"> ${el._type === \"EXPENSE\" ? \"-\" : \"\"}\n          ${el._value} ${CURRENCY_UNIT}</div>\n        <div>${this.#getDateByTimeStamp(el.timestamp)}</div>\n      </div>`\n    }\n\n    generateHTMLString() {\n        let html = \"\";\n        if (Array.isArray(this.data)) {\n            this.data.forEach(el => {\n                html += this.getCardHTMLString(el);\n            })\n        }\n        return html;\n    }\n\n    #getDateByTimeStamp(timestamp) {\n        let date = new Date(timestamp);\n        return date.toDateString();\n    }\n\n}","import { CURRENCY_UNIT } from \"../config\";\nimport { ListView } from \"./ListView\";\n\nclass ExpenseTrackerView extends ListView {\n    _container = document.querySelector(\".expenses_container\")\n    _filterSelect = document.querySelector(\".expense_filter\");  \n};\n\nexport default new ExpenseTrackerView();","import { ListView } from \"./ListView\";\n\nclass IncomeTrackerView extends ListView {\n    _container = document.querySelector(\".income_container\");\n    _filterSelect = document.querySelector(\".income_filter\")\n};\n\nexport default new IncomeTrackerView();","import AddTransactionView from \"./AddTransactionView\"\nimport ShowBalanceView from \"./ShowBalanceView\"\nimport ExpenseTrackerView from \"./ExpenseTrackerView\"\nimport IncomeTrackerView from \"./IncomeTrackerView\"\nexport {\n    AddTransactionView,\n    ShowBalanceView,\n    ExpenseTrackerView,\n    IncomeTrackerView\n}","// import from model 3.\nimport { Transaction, transactionType } from \"./model\";\nimport { AddTransactionView, ShowBalanceView, ExpenseTrackerView, IncomeTrackerView } from \"./Views\"\n\n// getting the data from ls 7.\nconst getTransactionsFromLS = (type) => {\n    return JSON.parse(localStorage.getItem(type) || '[]')\n}\n// storing the data to ls 6.\nconst saveTransactionInLS = (type, transaction) => {\n    let list = getTransactionsFromLS(type);\n    list.push(transaction);\n    list = JSON.stringify(list);\n    localStorage.setItem(type, list);\n}\n\nconst controlAddTransaction = (event) => {\n    event.preventDefault();\n    let { amount, type } = AddTransactionView;\n    console.log(amount, type)\n    const transaction = new Transaction(type, amount);\n    saveTransactionInLS(type, transaction);\n    AddTransactionView.clearForm();\n    if (type === transactionType.EXPENSE) {\n        ExpenseTrackerView.pushTransactionCard(transaction);\n    }\n    else {\n        IncomeTrackerView.pushTransactionCard(transaction);\n    }\n    controlShowBalance();\n}\n\n// total balance\nconst controlShowBalance = () => {\n    console.log(\"StorageChangeListener triggered\");\n    const income = getTransactionsFromLS(transactionType.INCOME);\n    const expense = getTransactionsFromLS(transactionType.EXPENSE);\n    ShowBalanceView.render({\n        income,\n        expense\n    })\n};\n\nconst compareAmountFn = (a, b, flag) => {\n    if (flag) {\n        if (a._value < b._value) {\n            return -1;\n        }\n        if (a._value > b._value) {\n            return 1;\n        }\n        // a must be equal to b\n        return 0;\n\n    } else {\n        if (a._value > b._value) {\n            return -1;\n        }\n        if (a._value < b._value) {\n            return 1;\n        }\n        // a must be equal to b\n        return 0;\n    }\n}\nconst controlSortByAmount = (list, view, flag, shouldReverse) => {\n    if (Array.isArray(list)) {\n        list.sort((a, b) => compareAmountFn(a, b, flag));\n        console.log(\"sorted list is\", list)\n        if (shouldReverse) list = list.reverse()\n        view.render(list);\n    }\n};\n\nconst controlFilterChange = (ev) => {\n    console.log(ev.target.value)\n    if (ev.target.id === \"income_filter\") {\n        if (ev.target.value === \"Amount+\") {\n            controlSortByAmount(getTransactionsFromLS(transactionType.INCOME),\n                IncomeTrackerView, false)\n        }\n\n        if (ev.target.value === \"Amount-\") {\n            controlSortByAmount(getTransactionsFromLS(transactionType.INCOME),\n                IncomeTrackerView, true)\n        }\n\n        if (ev.target.value === \"none\") {\n            IncomeTrackerView.render(getTransactionsFromLS(transactionType.INCOME));\n        }\n    } else {\n        if (ev.target.value === \"Amount+\") {\n            controlSortByAmount(getTransactionsFromLS(transactionType.EXPENSE),\n                ExpenseTrackerView, false, true)\n        }\n\n        if (ev.target.value === \"Amount-\") {\n            controlSortByAmount(getTransactionsFromLS(transactionType.EXPENSE),\n                ExpenseTrackerView, true, true)\n        }\n\n        if (ev.target.value === \"none\") {\n            ExpenseTrackerView.render(getTransactionsFromLS(transactionType.EXPENSE));\n        }\n    }\n\n}\n\nconst init = () => {\n    AddTransactionView.addSubmitHandler(controlAddTransaction);\n    controlShowBalance();\n\n    ExpenseTrackerView.render(getTransactionsFromLS(transactionType.EXPENSE))\n    ExpenseTrackerView.addFilterEventHandler(controlFilterChange)\n\n\n    IncomeTrackerView.render(getTransactionsFromLS(transactionType.INCOME))\n    IncomeTrackerView.addFilterEventHandler(controlFilterChange)\n\n};\ninit();\n"]}